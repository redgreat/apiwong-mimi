[2023-06-06 15:19:05,782: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-06 15:19:05,797: INFO/MainProcess] mingle: searching for neighbors
[2023-06-06 15:19:06,840: INFO/MainProcess] mingle: all alone
[2023-06-06 15:19:06,954: INFO/MainProcess] celery@macwong ready.
[2023-06-06 15:59:47,549: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-06 15:59:47,563: INFO/MainProcess] mingle: searching for neighbors
[2023-06-06 15:59:48,608: INFO/MainProcess] mingle: all alone
[2023-06-06 15:59:48,692: INFO/MainProcess] celery@macwong ready.
[2023-06-06 16:00:16,866: INFO/MainProcess] Task app.celery.flask_app_context[2c3b8f4a-fc4b-40c2-ba8c-cfc03921669e] received
[2023-06-06 16:00:16,898: INFO/ForkPoolWorker-7] Task app.celery.flask_app_context[2c3b8f4a-fc4b-40c2-ba8c-cfc03921669e] succeeded in 0.027721124999999347s: '<Config {\'DEBUG\': False, \'TESTING\': False, \'PROPAGATE_EXCEPTIONS\': None, \'SECRET_KEY\': \'mdd1##$$%^!DSA#FDSF\', \'PERMANENT_SESSION_LIFETIME\': datetime.timedelta(days=31), \'USE_X_SENDFILE\': False, \'SERVER_NAME\': None, \'APPLICATION_ROOT\': \'/\', \'SESSION_COOKIE_NAME\': \'session\', \'SESSION_COOKIE_DOMAIN\': None, \'SESSION_COOKIE_PATH\': None, \'SESSION_COOKIE_HTTPONLY\': True, \'SESSION_COOKIE_SECURE\': False, \'SESSION_COOKIE_SAMESITE\': None, \'SESSION_REFRESH_EACH_REQUEST\': True, \'MAX_CONTENT_LENGTH\': None, \'SEND_FILE_MAX_AGE_DEFAULT\': None, \'TRAP_BAD_REQUEST_ERRORS\': None, \'TRAP_HTTP_EXCEPTIONS\': False, \'EXPLAIN_TEMPLATE_LOADING\': False, \'PREFERRED_URL_SCHEME\': \'http\', \'TEMPLATES_AUTO_RELOAD\': None, \'MAX_COOKIE_SIZE\': 4093, \'DEFAULT_PAGE_INDEX\': 1, \'DEFAULT_PAGE_SIZE\': 10, \'SQLALCHEMY_DATABASE_URI\': \'mysql+pymysql://2VGr71AdbLZb9Ms.root:Mm19890425@gateway01.ap-northeast-1.prod.aws.tidbcloud.com:4000/dailywong?charset=utf8mb4&ssl_ca=/etc/ssl/cert.pem&ssl_check_hostname=false\', \'LOGGING_CONFIG_PATH\':...'
[2023-06-06 16:07:46,408: INFO/MainProcess] Task app.celery.add[13da74f5-f85f-488f-ab69-d3c2401e7943] received
[2023-06-06 16:07:46,426: INFO/ForkPoolWorker-7] Task app.celery.add[13da74f5-f85f-488f-ab69-d3c2401e7943] succeeded in 0.010737417000029836s: '3'
[2023-06-07 08:08:47,982: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
TimeoutError: [Errno 60] Operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (60, 'Operation timed out')
[2023-06-07 08:08:48,021: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 08:08:48,057: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 08:08:48,070: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 08:09:07,169: INFO/MainProcess] mingle: all alone
[2023-06-07 08:29:06,791: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 08:29:06,805: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 08:29:07,853: INFO/MainProcess] mingle: all alone
[2023-06-07 08:29:07,953: INFO/MainProcess] celery@macwong ready.
[2023-06-07 18:48:06,986: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
TimeoutError: [Errno 60] Operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (60, 'Operation timed out')
[2023-06-07 18:48:07,789: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 18:48:07,848: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 18:48:07,868: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 18:48:16,984: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
TimeoutError: [Errno 60] Operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (60, 'Operation timed out')
[2023-06-07 18:48:17,134: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 18:48:17,203: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 18:48:17,225: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 18:48:26,896: INFO/MainProcess] mingle: all alone
[2023-06-07 18:48:36,263: INFO/MainProcess] mingle: all alone
[2023-06-07 23:02:27,451: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:02:27,514: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:02:27,574: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:02:27,596: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:02:28,684: INFO/MainProcess] mingle: all alone
[2023-06-07 23:02:36,655: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:02:36,845: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:02:37,037: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:02:37,056: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:02:38,150: INFO/MainProcess] mingle: all alone
[2023-06-07 23:13:53,272: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:13:53,330: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:13:53,393: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:13:53,419: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:13:54,502: INFO/MainProcess] mingle: all alone
[2023-06-07 23:14:03,022: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:14:03,205: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:14:03,531: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:14:03,550: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:14:05,067: INFO/MainProcess] mingle: all alone
[2023-06-07 23:20:21,169: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:20:21,238: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:20:21,305: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:20:21,331: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:20:22,430: INFO/MainProcess] mingle: all alone
[2023-06-07 23:25:29,066: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:25:29,124: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:25:29,189: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:25:29,215: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:25:30,306: INFO/MainProcess] mingle: all alone
[2023-06-07 23:31:46,978: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:31:47,033: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:31:47,095: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:31:47,116: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:31:48,205: INFO/MainProcess] mingle: all alone
[2023-06-07 23:36:54,865: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:36:54,956: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:36:55,011: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:36:55,049: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:36:56,120: INFO/MainProcess] mingle: all alone
[2023-06-07 23:43:12,813: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:43:12,868: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:43:12,937: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:43:12,959: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:43:14,052: INFO/MainProcess] mingle: all alone
[2023-06-07 23:43:22,963: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:43:23,066: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:43:23,130: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:43:23,156: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:43:24,253: INFO/MainProcess] mingle: all alone
[2023-06-07 23:54:38,631: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:54:38,688: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:54:38,752: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:54:38,779: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:54:39,861: INFO/MainProcess] mingle: all alone
[2023-06-07 23:54:48,826: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-07 23:54:48,882: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-07 23:54:48,949: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-07 23:54:48,975: INFO/MainProcess] mingle: searching for neighbors
[2023-06-07 23:54:50,074: INFO/MainProcess] mingle: all alone
[2023-06-08 00:05:22,863: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:05:23,049: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:05:23,239: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:05:23,395: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:05:24,814: INFO/MainProcess] mingle: all alone
[2023-06-08 00:05:32,986: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:05:33,040: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:05:33,101: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:05:33,123: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:05:34,213: INFO/MainProcess] mingle: all alone
[2023-06-08 00:16:48,434: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:16:48,491: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:16:48,553: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:16:48,576: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:16:49,659: INFO/MainProcess] mingle: all alone
[2023-06-08 00:16:58,293: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:16:58,348: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:16:58,415: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:16:58,436: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:16:59,524: INFO/MainProcess] mingle: all alone
[2023-06-08 00:23:16,568: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:23:16,624: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:23:16,689: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:23:16,713: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:23:17,799: INFO/MainProcess] mingle: all alone
[2023-06-08 00:23:26,430: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:23:26,489: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:23:26,549: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:23:26,573: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:23:27,661: INFO/MainProcess] mingle: all alone
[2023-06-08 00:31:05,394: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:31:05,457: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:31:05,524: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:31:05,549: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:31:06,646: INFO/MainProcess] mingle: all alone
[2023-06-08 00:31:15,262: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:31:15,318: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:31:15,378: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:31:15,403: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:31:16,491: INFO/MainProcess] mingle: all alone
[2023-06-08 00:42:31,397: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:42:31,583: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:42:31,779: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:42:32,134: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:42:33,351: INFO/MainProcess] mingle: all alone
[2023-06-08 00:42:41,242: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:42:41,298: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:42:41,362: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:42:41,385: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:42:42,484: INFO/MainProcess] mingle: all alone
[2023-06-08 00:53:57,470: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:53:57,665: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:53:57,998: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:53:58,158: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:53:59,513: INFO/MainProcess] mingle: all alone
[2023-06-08 00:54:07,032: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 00:54:07,087: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 00:54:07,154: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 00:54:07,179: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 00:54:08,271: INFO/MainProcess] mingle: all alone
[2023-06-08 01:05:23,626: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:05:23,688: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:05:23,755: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:05:23,776: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:05:24,863: INFO/MainProcess] mingle: all alone
[2023-06-08 01:05:32,851: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:05:33,046: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:05:33,122: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:05:33,149: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:05:34,252: INFO/MainProcess] mingle: all alone
[2023-06-08 01:10:05,392: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:10:05,464: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:10:05,531: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:10:05,552: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:10:06,635: INFO/MainProcess] mingle: all alone
[2023-06-08 01:15:12,826: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:15:12,883: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:15:12,947: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:15:12,976: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:15:14,075: INFO/MainProcess] mingle: all alone
[2023-06-08 01:21:31,382: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:21:31,451: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:21:31,520: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:21:31,548: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:21:32,644: INFO/MainProcess] mingle: all alone
[2023-06-08 01:26:38,660: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:26:38,722: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:26:38,785: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:26:38,810: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:26:39,901: INFO/MainProcess] mingle: all alone
[2023-06-08 01:32:57,278: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:32:57,334: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:32:57,395: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:32:57,418: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:32:58,502: INFO/MainProcess] mingle: all alone
[2023-06-08 01:33:06,740: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:33:06,794: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:33:06,855: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:33:06,880: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:38:05,744: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 37, in start
    self.sync(c)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 41, in sync
    replies = self.send_hello(c)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 54, in send_hello
    replies = inspect.hello(c.hostname, our_revoked._data) or {}
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 389, in hello
    return self._request('hello', from_node=from_node, revoked=revoked)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 106, in _request
    return self._prepare(self.app.control.broadcast(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 741, in broadcast
    return self.mailbox(conn)._broadcast(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/pidbox.py", line 344, in _broadcast
    return self._collect(reply_ticket, limit=limit,
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/pidbox.py", line 391, in _collect
    chan.after_reply_message_received(queue.name)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/virtual/base.py", line 537, in after_reply_message_received
    self.queue_delete(queue)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/virtual/base.py", line 533, in queue_delete
    self._delete(queue, exchange, *meta, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 1041, in _delete
    client.srem(self.keyprefix_queue % (exchange,),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 3424, in srem
    return self.execute_command("SREM", name, *values)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:38:05,820: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:38:05,982: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:38:06,020: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:38:07,108: INFO/MainProcess] mingle: all alone
[2023-06-08 01:44:22,938: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:44:22,998: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:44:23,060: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:44:23,081: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:44:24,165: INFO/MainProcess] mingle: all alone
[2023-06-08 01:44:33,734: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:44:33,791: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:44:33,852: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:44:33,875: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:44:34,966: INFO/MainProcess] mingle: all alone
[2023-06-08 01:55:48,884: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:55:48,940: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:55:49,006: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:55:49,030: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:55:50,116: INFO/MainProcess] mingle: all alone
[2023-06-08 01:55:59,672: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 01:55:59,727: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 01:55:59,793: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 01:55:59,819: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 01:56:00,919: INFO/MainProcess] mingle: all alone
[2023-06-08 02:07:14,723: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:07:15,035: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:07:15,394: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:07:15,625: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:07:16,869: INFO/MainProcess] mingle: all alone
[2023-06-08 02:07:25,435: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:07:25,490: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:07:25,551: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:07:25,573: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:07:26,662: INFO/MainProcess] mingle: all alone
[2023-06-08 02:13:42,909: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:13:42,973: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:13:43,030: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:13:43,054: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:13:44,138: INFO/MainProcess] mingle: all alone
[2023-06-08 02:13:53,071: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:13:53,136: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:13:53,200: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:13:53,222: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:13:54,318: INFO/MainProcess] mingle: all alone
[2023-06-08 02:25:08,799: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:25:08,985: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:25:09,176: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:25:09,332: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:25:10,546: INFO/MainProcess] mingle: all alone
[2023-06-08 02:25:18,964: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:25:19,021: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:25:19,082: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:25:19,108: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:25:20,200: INFO/MainProcess] mingle: all alone
[2023-06-08 02:33:17,229: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:33:17,285: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:33:17,349: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:33:17,377: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:33:18,461: INFO/MainProcess] mingle: all alone
[2023-06-08 02:33:27,138: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:33:27,193: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:33:27,257: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:33:27,281: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:33:28,373: INFO/MainProcess] mingle: all alone
[2023-06-08 02:44:43,125: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:44:43,180: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:44:43,246: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:44:43,272: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:44:44,358: INFO/MainProcess] mingle: all alone
[2023-06-08 02:44:53,035: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:44:53,086: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:44:53,150: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:44:53,175: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:44:54,263: INFO/MainProcess] mingle: all alone
[2023-06-08 02:56:09,130: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:56:09,183: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:56:09,244: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:56:09,267: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:56:10,361: INFO/MainProcess] mingle: all alone
[2023-06-08 02:56:19,012: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 02:56:19,066: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 02:56:19,125: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 02:56:19,152: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 02:56:20,242: INFO/MainProcess] mingle: all alone
[2023-06-08 03:02:37,426: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:02:37,624: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:02:37,950: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:02:37,973: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:02:39,447: INFO/MainProcess] mingle: all alone
[2023-06-08 03:02:47,113: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:02:47,172: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:02:47,238: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:02:47,263: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:02:48,352: INFO/MainProcess] mingle: all alone
[2023-06-08 03:14:03,781: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:14:03,844: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:14:03,902: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:14:03,922: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:14:05,043: INFO/MainProcess] mingle: all alone
[2023-06-08 03:14:13,858: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:14:13,915: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:14:13,973: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:14:13,992: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:14:15,086: INFO/MainProcess] mingle: all alone
[2023-06-08 03:25:29,937: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:25:30,033: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:25:30,097: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:25:30,140: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:25:31,216: INFO/MainProcess] mingle: all alone
[2023-06-08 03:25:40,030: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:25:40,092: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:25:40,156: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:25:40,179: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:25:41,269: INFO/MainProcess] mingle: all alone
[2023-06-08 03:31:58,015: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:31:58,071: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:31:58,131: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:31:58,153: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:31:59,243: INFO/MainProcess] mingle: all alone
[2023-06-08 03:35:26,766: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:35:26,822: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:35:26,879: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:35:26,902: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:35:27,983: INFO/MainProcess] mingle: all alone
[2023-06-08 03:41:44,720: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:41:44,779: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:41:44,843: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:41:44,864: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:41:45,946: INFO/MainProcess] mingle: all alone
[2023-06-08 03:46:52,551: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:46:52,604: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:46:52,662: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:46:52,686: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:46:53,769: INFO/MainProcess] mingle: all alone
[2023-06-08 03:53:10,254: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:53:10,313: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:53:10,375: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:53:10,398: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:53:11,491: INFO/MainProcess] mingle: all alone
[2023-06-08 03:53:20,296: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:53:20,349: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:53:20,414: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:53:20,437: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:58:19,728: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 37, in start
    self.sync(c)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 41, in sync
    replies = self.send_hello(c)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 54, in send_hello
    replies = inspect.hello(c.hostname, our_revoked._data) or {}
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 389, in hello
    return self._request('hello', from_node=from_node, revoked=revoked)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 106, in _request
    return self._prepare(self.app.control.broadcast(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 741, in broadcast
    return self.mailbox(conn)._broadcast(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/pidbox.py", line 344, in _broadcast
    return self._collect(reply_ticket, limit=limit,
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/pidbox.py", line 391, in _collect
    chan.after_reply_message_received(queue.name)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/virtual/base.py", line 537, in after_reply_message_received
    self.queue_delete(queue)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/virtual/base.py", line 533, in queue_delete
    self._delete(queue, exchange, *meta, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 1041, in _delete
    client.srem(self.keyprefix_queue % (exchange,),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 3424, in srem
    return self.execute_command("SREM", name, *values)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:58:19,730: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:58:19,846: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:58:19,866: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:58:20,956: INFO/MainProcess] mingle: all alone
[2023-06-08 03:59:38,122: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 03:59:38,184: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 03:59:38,247: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 03:59:38,271: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 03:59:39,364: INFO/MainProcess] mingle: all alone
[2023-06-08 04:11:03,634: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:11:03,691: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:11:03,752: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:11:03,775: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:11:04,857: INFO/MainProcess] mingle: all alone
[2023-06-08 04:11:25,272: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:11:25,333: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:11:25,404: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:11:25,426: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:11:26,532: INFO/MainProcess] mingle: all alone
[2023-06-08 04:22:29,032: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:22:29,085: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:22:29,142: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:22:29,162: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:22:30,236: INFO/MainProcess] mingle: all alone
[2023-06-08 04:22:50,688: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:22:50,742: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:22:50,798: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:22:50,817: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:22:51,908: INFO/MainProcess] mingle: all alone
[2023-06-08 04:33:54,859: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:33:54,914: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:33:54,972: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:33:54,995: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:33:56,084: INFO/MainProcess] mingle: all alone
[2023-06-08 04:34:16,511: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:34:17,339: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:34:17,542: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:34:17,702: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:34:19,063: INFO/MainProcess] mingle: all alone
[2023-06-08 04:40:22,316: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:40:22,379: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:40:22,440: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:40:22,461: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:45:21,642: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 37, in start
    self.sync(c)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 41, in sync
    replies = self.send_hello(c)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 54, in send_hello
    replies = inspect.hello(c.hostname, our_revoked._data) or {}
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 389, in hello
    return self._request('hello', from_node=from_node, revoked=revoked)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 106, in _request
    return self._prepare(self.app.control.broadcast(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 741, in broadcast
    return self.mailbox(conn)._broadcast(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/pidbox.py", line 344, in _broadcast
    return self._collect(reply_ticket, limit=limit,
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/pidbox.py", line 391, in _collect
    chan.after_reply_message_received(queue.name)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/virtual/base.py", line 537, in after_reply_message_received
    self.queue_delete(queue)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/virtual/base.py", line 533, in queue_delete
    self._delete(queue, exchange, *meta, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 1041, in _delete
    client.srem(self.keyprefix_queue % (exchange,),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 3424, in srem
    return self.execute_command("SREM", name, *values)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:45:21,650: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:45:21,747: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:45:21,777: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:45:22,898: INFO/MainProcess] mingle: all alone
[2023-06-08 04:45:42,866: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:45:43,202: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:45:43,543: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:45:43,702: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:45:45,104: INFO/MainProcess] mingle: all alone
[2023-06-08 04:52:54,719: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:52:54,780: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:52:54,842: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:52:54,868: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:52:55,955: INFO/MainProcess] mingle: all alone
[2023-06-08 04:59:10,703: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:59:10,757: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:59:10,821: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:59:10,844: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:59:11,928: INFO/MainProcess] mingle: all alone
[2023-06-08 04:59:22,624: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 04:59:22,689: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 04:59:22,750: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 04:59:22,774: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 04:59:23,880: INFO/MainProcess] mingle: all alone
[2023-06-08 05:04:38,604: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:04:38,661: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:04:38,719: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:04:38,740: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:04:39,815: INFO/MainProcess] mingle: all alone
[2023-06-08 05:04:50,587: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:04:50,770: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:04:51,314: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:04:51,338: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:04:53,065: INFO/MainProcess] mingle: all alone
[2023-06-08 05:11:06,346: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:11:06,403: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:11:06,465: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:11:06,488: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:11:07,565: INFO/MainProcess] mingle: all alone
[2023-06-08 05:16:16,365: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:16:16,424: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:16:16,490: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:16:16,511: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:16:17,598: INFO/MainProcess] mingle: all alone
[2023-06-08 05:20:23,081: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:20:23,141: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:20:23,203: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:20:23,227: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:20:24,310: INFO/MainProcess] mingle: all alone
[2023-06-08 05:20:42,870: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:20:42,921: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:20:42,983: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:20:43,008: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:20:44,093: INFO/MainProcess] mingle: all alone
[2023-06-08 05:26:57,733: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:26:57,794: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:26:57,861: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:26:57,889: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:26:58,988: INFO/MainProcess] mingle: all alone
[2023-06-08 05:27:10,760: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:27:10,814: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:27:10,877: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:27:10,899: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:27:52,161: INFO/MainProcess] mingle: all alone
[2023-06-08 05:41:02,358: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:41:02,417: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:41:02,479: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:41:02,501: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:41:03,583: INFO/MainProcess] mingle: all alone
[2023-06-08 05:46:13,228: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:46:13,281: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:46:13,353: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:46:13,382: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:46:14,465: INFO/MainProcess] mingle: all alone
[2023-06-08 05:52:28,281: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:52:28,333: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:52:28,396: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:52:28,420: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:52:29,501: INFO/MainProcess] mingle: all alone
[2023-06-08 05:52:41,305: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 05:52:41,360: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 05:52:41,420: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 05:52:41,443: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 05:52:42,549: INFO/MainProcess] mingle: all alone
[2023-06-08 06:02:43,554: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:02:43,741: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:02:43,932: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:02:43,959: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:02:45,039: INFO/MainProcess] mingle: all alone
[2023-06-08 06:02:56,749: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:02:56,805: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:02:56,868: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:02:56,893: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:02:57,989: INFO/MainProcess] mingle: all alone
[2023-06-08 06:14:09,279: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:14:09,613: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:14:09,808: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:14:09,973: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:14:11,626: INFO/MainProcess] mingle: all alone
[2023-06-08 06:14:22,170: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:14:22,228: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:14:22,297: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:14:22,324: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:14:23,423: INFO/MainProcess] mingle: all alone
[2023-06-08 06:21:18,659: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:21:18,713: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:21:18,773: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:21:18,797: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:21:19,875: INFO/MainProcess] mingle: all alone
[2023-06-08 06:21:31,145: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:21:31,211: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:21:31,288: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:21:31,317: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:21:32,416: INFO/MainProcess] mingle: all alone
[2023-06-08 06:27:46,741: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:27:46,804: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:27:46,866: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:27:46,889: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:32:45,859: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 37, in start
    self.sync(c)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 41, in sync
    replies = self.send_hello(c)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/mingle.py", line 54, in send_hello
    replies = inspect.hello(c.hostname, our_revoked._data) or {}
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 389, in hello
    return self._request('hello', from_node=from_node, revoked=revoked)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 106, in _request
    return self._prepare(self.app.control.broadcast(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/app/control.py", line 741, in broadcast
    return self.mailbox(conn)._broadcast(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/pidbox.py", line 344, in _broadcast
    return self._collect(reply_ticket, limit=limit,
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/pidbox.py", line 391, in _collect
    chan.after_reply_message_received(queue.name)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/virtual/base.py", line 537, in after_reply_message_received
    self.queue_delete(queue)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/virtual/base.py", line 533, in queue_delete
    self._delete(queue, exchange, *meta, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 1041, in _delete
    client.srem(self.keyprefix_queue % (exchange,),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 3424, in srem
    return self.execute_command("SREM", name, *values)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:32:45,861: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:32:45,952: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:32:45,999: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:32:47,093: INFO/MainProcess] mingle: all alone
[2023-06-08 06:32:57,159: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:32:57,209: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:32:57,270: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:32:57,295: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:32:58,392: INFO/MainProcess] mingle: all alone
[2023-06-08 06:38:45,604: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 362, in create_loop
    cb(*cbargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 1326, in on_readable
    self.cycle.on_readable(fileno)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 562, in on_readable
    chan.handlers[type]()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 906, in _receive
    ret.append(self._receive_one(c))
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 916, in _receive_one
    response = c.parse_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1542, in parse_response
    response = self._execute(conn, try_read)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1518, in _execute
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1520, in <lambda>
    lambda error: self._disconnect_raise_connect(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1507, in _disconnect_raise_connect
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1519, in <lambda>
    lambda: command(*args, **kwargs),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1540, in try_read
    return conn.read_response(disconnect_on_error=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:38:45,604: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 362, in create_loop
    cb(*cbargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 1326, in on_readable
    self.cycle.on_readable(fileno)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 562, in on_readable
    chan.handlers[type]()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 906, in _receive
    ret.append(self._receive_one(c))
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 916, in _receive_one
    response = c.parse_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1542, in parse_response
    response = self._execute(conn, try_read)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1518, in _execute
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1520, in <lambda>
    lambda error: self._disconnect_raise_connect(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1507, in _disconnect_raise_connect
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1519, in <lambda>
    lambda: command(*args, **kwargs),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1540, in try_read
    return conn.read_response(disconnect_on_error=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:38:45,699: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:38:45,699: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:38:45,763: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:38:45,772: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:38:45,786: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:38:45,791: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:38:46,863: INFO/MainProcess] mingle: all alone
[2023-06-08 06:38:46,875: INFO/MainProcess] mingle: all alone
[2023-06-08 06:54:47,435: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:54:47,444: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 06:54:47,494: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:54:47,499: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 06:54:47,546: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:54:47,546: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 06:54:47,570: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:54:47,572: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 06:54:48,655: INFO/MainProcess] mingle: all alone
[2023-06-08 06:54:48,655: INFO/MainProcess] mingle: all alone
[2023-06-08 07:01:15,363: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:01:15,363: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:01:15,431: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:01:15,431: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:01:15,485: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:01:15,494: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:01:15,505: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:01:15,515: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:01:16,601: INFO/MainProcess] mingle: all alone
[2023-06-08 07:01:16,601: INFO/MainProcess] mingle: all alone
[2023-06-08 07:11:11,970: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:11:11,970: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:11:12,039: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:11:12,039: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:11:12,093: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:11:12,103: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:11:12,115: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:11:12,125: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:11:13,202: INFO/MainProcess] mingle: all alone
[2023-06-08 07:11:13,208: INFO/MainProcess] mingle: all alone
[2023-06-08 07:19:47,792: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:19:47,792: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:19:47,898: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:19:47,905: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:19:48,092: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:19:48,102: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:19:48,112: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:19:48,126: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:19:49,365: INFO/MainProcess] mingle: all alone
[2023-06-08 07:19:49,365: INFO/MainProcess] mingle: all alone
[2023-06-08 07:28:45,317: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:28:45,328: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:28:45,369: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:28:45,375: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:28:45,422: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:28:45,424: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:28:45,440: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:28:45,445: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:28:46,517: INFO/MainProcess] mingle: all alone
[2023-06-08 07:28:46,522: INFO/MainProcess] mingle: all alone
[2023-06-08 07:37:49,458: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:37:49,463: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (54, 'Connection reset by peer')
[2023-06-08 07:37:49,516: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:37:49,516: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 07:37:49,578: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:37:49,588: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 07:37:49,601: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:37:49,611: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 07:37:50,697: INFO/MainProcess] mingle: all alone
[2023-06-08 07:37:50,697: INFO/MainProcess] mingle: all alone
[2023-06-08 08:14:31,999: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
TimeoutError: [Errno 60] Operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (60, 'Operation timed out')
[2023-06-08 08:14:32,000: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 874, in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 347, in read_response
    result = self._read_response(disable_decoding=disable_decoding)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 357, in _read_response
    raw = self._buffer.readline()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 260, in readline
    self._read_from_socket()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 210, in _read_from_socket
    data = self._sock.recv(socket_read_size)
TimeoutError: [Errno 60] Operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 332, in start
    blueprint.start(self)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py", line 628, in start
    c.loop(*c.loop_args())
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/loops.py", line 97, in asynloop
    next(loop)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 301, in create_loop
    poll_timeout = fire_timers(propagate=propagate) if scheduled else 1
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/hub.py", line 143, in fire_timers
    entry()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 64, in __call__
    return self.fun(*self.args, **self.kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/asynchronous/timer.py", line 126, in _reschedules
    return fun(*args, **kwargs)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 547, in maybe_restore_messages
    return channel.qos.restore_visible(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 403, in restore_visible
    with Mutex(client, self.unacked_mutex_key,
  File "/opt/homebrew/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py", line 113, in __enter__
    return next(self.gen)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/kombu/transport/redis.py", line 163, in Mutex
    lock_acquired = lock.acquire(blocking=False)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 207, in acquire
    if self.do_acquire(token):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/lock.py", line 223, in do_acquire
    if self.redis.set(self.name, token, nx=True, px=timeout):
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/commands/core.py", line 2313, in set
    return self.execute_command("SET", *pieces, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1269, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 49, in call_with_retry
    fail(error)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1273, in <lambda>
    lambda error: self._disconnect_raise(conn, error),
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1259, in _disconnect_raise
    raise error
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1270, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1246, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/client.py", line 1286, in parse_response
    response = connection.read_response()
  File "/Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/redis/connection.py", line 882, in read_response
    raise ConnectionError(
redis.exceptions.ConnectionError: Error while reading from nas.wongcw.cn:6379 : (60, 'Operation timed out')
[2023-06-08 08:14:32,098: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 08:14:32,100: WARNING/MainProcess] /Users/wangcw/Documents/envs/apiwong/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:367: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2023-06-08 08:14:32,142: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 08:14:32,146: INFO/MainProcess] Connected to redis://default:**@nas.wongcw.cn:6379/1
[2023-06-08 08:14:32,157: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 08:14:32,161: INFO/MainProcess] mingle: searching for neighbors
[2023-06-08 08:14:52,447: INFO/MainProcess] mingle: all alone
[2023-06-08 08:14:52,450: INFO/MainProcess] mingle: all alone
